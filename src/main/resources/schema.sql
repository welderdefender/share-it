DROP TABLE IF EXISTS users, item_requests, item, booking, comments;

CREATE TABLE IF NOT EXISTS users (
  id int GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  name VARCHAR(50) NOT NULL,
  email VARCHAR(50) NOT NULL UNIQUE,
  CONSTRAINT pk_users PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS item_requests (
  id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  description VARCHAR(1000) NOT NULL,
  requester int REFERENCES users (id),
  created TIMESTAMP WITHOUT TIME ZONE NOT NULL
);

CREATE TABLE IF NOT EXISTS item (
  id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  name VARCHAR(100),
  description VARCHAR(1000),
  available BOOLEAN DEFAULT FALSE,
  owner int REFERENCES users(id),
  request int REFERENCES item_requests(id),
  CONSTRAINT UNIQUE_OWNER_ITEM_NAME UNIQUE(owner, name)
);

CREATE TABLE IF NOT EXISTS booking (
    booking_id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    start_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    end_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    item_id INT,
    booker_id INT,
    status VARCHAR(20) NOT NULL DEFAULT 'WAITING',
    CONSTRAINT pk_booking PRIMARY KEY(booking_id),
    FOREIGN KEY(item_id) REFERENCES item(id) ON DELETE CASCADE,
    FOREIGN KEY(booker_id) REFERENCES users(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS comments (
    comment_id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    item_id INT,
    author_id INT,
    text VARCHAR(1000) NOT NULL,
    created TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_comments PRIMARY KEY (comment_id),
    FOREIGN KEY (item_id) REFERENCES item(id) ON DELETE CASCADE,
    FOREIGN KEY (author_id) REFERENCES users(id) ON DELETE CASCADE
);